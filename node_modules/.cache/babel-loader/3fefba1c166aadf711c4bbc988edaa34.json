{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Jocelyne/Downloads/CapstoneProject-TutorNow-Frontend-main/src/components/pages/studentsignup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, FormGroup, Col, Input, Label, Button, Container, CardBody, Card, CardText } from 'reactstrap';\nimport '../../App.css';\nimport '../../index.css';\n\nconst StudentSignup = () => {\n  _s();\n\n  const [firstname, setFirstName] = useState(\"\");\n  const [lastname, setLastName] = useState(\"\");\n  const [dateofbirth, setDOB] = useState(\"\");\n  const [schoolprogram, setSchoolProgram] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const formSubmit = async event => {\n    event.preventDefault();\n    console.log('ready to hit api/student/new');\n    const response = await fetch('http://localhost:3001/api/student/new', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        firstname,\n        lastname,\n        dateofbirth,\n        schoolprogram,\n        location,\n        email,\n        password\n      })\n    });\n    console.log('finish fetch call');\n    const payload = await response.json();\n    console.log('response code is' + response.status);\n\n    if (response.status >= 400) {\n      alert(`Oops! Error: ${payload.message} for fields: ${payload.invalid.join(\",\")}`);\n    } else {\n      //  alert(`Congrats! Submission submitted with id: ${payload.id}`)\n      setFirstName(\"\");\n      setLastName(\"\");\n      setDOB(\"\");\n      setSchoolProgram(\"\");\n      setLocation(\"\");\n      setEmail(\"\");\n      setPassword(\"\");\n      console.log(payload);\n      sessionStorage.setItem('student', JSON.stringify(payload));\n      window.location = '/studentprofile';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column left\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"  Student Sign Up \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          className: \"my-5\",\n          onSubmit: formSubmit,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            row: true,\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"nameEntry\",\n              sm: 2,\n              children: \"First Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 8,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"firstname\",\n                id: \"firstnameEntry\",\n                placeholder: \"Enter your first name\",\n                required: true,\n                value: firstname,\n                onChange: e => setFirstName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            row: true,\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"nameEntry\",\n              sm: 2,\n              children: \"Last Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 8,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"lastname\",\n                id: \"lastnameEntry\",\n                placeholder: \"Enter your last name\",\n                required: true,\n                value: lastname,\n                onChange: e => setLastName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            row: true,\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"nameEntry\",\n              sm: 2,\n              children: \" Date of Birth: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 8,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"date\",\n                name: \"dateofbirth\",\n                id: \"dobEntry\",\n                placeholder: \"Enter your date of birth\",\n                required: true,\n                value: dateofbirth,\n                onChange: e => setDOB(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            row: true,\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"nameEntry\",\n              sm: 2,\n              children: \" School Program: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 8,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"schoolprogram\",\n                id: \"schoolprogramEntry\",\n                placeholder: \"What is your faculty program?\",\n                required: true,\n                value: schoolprogram,\n                onChange: e => setSchoolProgram(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            row: true,\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"locationEntry\",\n              sm: 2,\n              children: \" Location \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 8,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"location\",\n                id: \"locationEntry\",\n                placeholder: \"Which city?\",\n                required: true,\n                value: location,\n                onChange: e => setLocation(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            row: true,\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"emailEntry\",\n              sm: 2,\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 8,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"email\",\n                name: \"email\",\n                id: \"emailEntry\",\n                placeholder: \"Your email will be your username\",\n                required: true,\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            row: true,\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"passwordEntry\",\n              sm: 2,\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 8,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"password\",\n                name: \"password\",\n                id: \"passwordEntry\",\n                placeholder: \"Password must be at least 6 characters\",\n                required: true,\n                value: password,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"success\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StudentSignup, \"HoRQOQf0L1Ys7sLyXLhtH6njuuQ=\");\n\n_c = StudentSignup;\nexport default StudentSignup;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentSignup\");","map":{"version":3,"sources":["/Users/Jocelyne/Downloads/CapstoneProject-TutorNow-Frontend-main/src/components/pages/studentsignup.js"],"names":["React","useState","Form","FormGroup","Col","Input","Label","Button","Container","CardBody","Card","CardText","StudentSignup","firstname","setFirstName","lastname","setLastName","dateofbirth","setDOB","schoolprogram","setSchoolProgram","location","setLocation","email","setEmail","password","setPassword","formSubmit","event","preventDefault","console","log","response","fetch","method","headers","body","JSON","stringify","payload","json","status","alert","message","invalid","join","sessionStorage","setItem","window","e","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,GAA1B,EAA+BC,KAA/B,EAAsCC,KAAtC,EAA6CC,MAA7C,EAAqDC,SAArD,EAAgEC,QAAhE,EAA0EC,IAA1E,EAAgFC,QAAhF,QAAgG,YAAhG;AACA,OAAO,eAAP;AACA,OAAO,iBAAP;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,WAAD,EAAcC,MAAd,IAAwBjB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACkB,aAAD,EAAgBC,gBAAhB,IAAoCnB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACsB,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACwB,QAAD,EAAWC,WAAX,IAA0BzB,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAM0B,UAAU,GAAG,MAAMC,KAAN,IAAe;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAD,EAA0C;AAClEC,MAAAA,MAAM,EAAE,MAD0D;AAElEC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX,OAFyD;AAMlEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACzB,QAAAA,SAAD;AAAYE,QAAAA,QAAZ;AAAsBE,QAAAA,WAAtB;AAAmCE,QAAAA,aAAnC;AAAkDE,QAAAA,QAAlD;AAA4DE,QAAAA,KAA5D;AAAmEE,QAAAA;AAAnE,OAAf;AAN4D,KAA1C,CAA5B;AAWAK,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,UAAMQ,OAAO,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAtB;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBC,QAAQ,CAACS,MAA1C;;AACA,QAAIT,QAAQ,CAACS,MAAT,IAAmB,GAAvB,EAA4B;AACxBC,MAAAA,KAAK,CAAE,gBAAeH,OAAO,CAACI,OAAQ,gBAAeJ,OAAO,CAACK,OAAR,CAAgBC,IAAhB,CAAqB,GAArB,CAA0B,EAA1E,CAAL;AACH,KAFD,MAEO;AACL;AACE/B,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,MAAM,CAAC,EAAD,CAAN;AACAE,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYQ,OAAZ;AACAO,MAAAA,cAAc,CAACC,OAAf,CAAuB,SAAvB,EAAkCV,IAAI,CAACC,SAAL,CAAeC,OAAf,CAAlC;AACAS,MAAAA,MAAM,CAAC3B,QAAP,GAAkB,iBAAlB;AACH;AACJ,GAhCD;;AAmCA,sBACI,QAAC,SAAD;AAAA,2BACM;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCAEN;AAAA;AAAA;AAAA;AAAA,gBAFM,eAGN;AAAA;AAAA;AAAA;AAAA,gBAHM,eAIN;AAAA;AAAA;AAAA;AAAA,gBAJM,eAKN;AAAA;AAAA;AAAA;AAAA,gBALM,eAOF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPE,eAQF;AAAA;AAAA;AAAA;AAAA,gBARE,eAWF,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAuB,UAAA,QAAQ,EAAEM,UAAjC;AAAA,kCAEI,QAAC,SAAD;AAAW,YAAA,GAAG,MAAd;AAAA,oCACI,QAAC,KAAD;AAAO,cAAA,GAAG,EAAC,WAAX;AAAuB,cAAA,EAAE,EAAE,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACA,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,IAAI,EAAC,WAAxB;AAAoC,gBAAA,EAAE,EAAC,gBAAvC;AAAwD,gBAAA,WAAW,EAAC,uBAApE;AAA4F,gBAAA,QAAQ,MAApG;AAAqG,gBAAA,KAAK,EAAEd,SAA5G;AAAuH,gBAAA,QAAQ,EAAEoC,CAAC,IAAInC,YAAY,CAACmC,CAAC,CAACC,MAAF,CAASC,KAAV;AAAlJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eASI,QAAC,SAAD;AAAW,YAAA,GAAG,MAAd;AAAA,oCACI,QAAC,KAAD;AAAO,cAAA,GAAG,EAAC,WAAX;AAAuB,cAAA,EAAE,EAAE,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACA,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,IAAI,EAAC,UAAxB;AAAmC,gBAAA,EAAE,EAAC,eAAtC;AAAsD,gBAAA,WAAW,EAAC,sBAAlE;AAAyF,gBAAA,QAAQ,MAAjG;AAAkG,gBAAA,KAAK,EAAEpC,QAAzG;AAAmH,gBAAA,QAAQ,EAAEkC,CAAC,IAAIjC,WAAW,CAACiC,CAAC,CAACC,MAAF,CAASC,KAAV;AAA7I;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ,eAgBI,QAAC,SAAD;AAAW,YAAA,GAAG,MAAd;AAAA,oCACI,QAAC,KAAD;AAAO,cAAA,GAAG,EAAC,WAAX;AAAuB,cAAA,EAAE,EAAE,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACA,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,IAAI,EAAC,aAAxB;AAAsC,gBAAA,EAAE,EAAC,UAAzC;AAAoD,gBAAA,WAAW,EAAC,0BAAhE;AAA2F,gBAAA,QAAQ,MAAnG;AAAoG,gBAAA,KAAK,EAAElC,WAA3G;AAAwH,gBAAA,QAAQ,EAAEgC,CAAC,IAAI/B,MAAM,CAAC+B,CAAC,CAACC,MAAF,CAASC,KAAV;AAA7I;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBJ,eAuBI,QAAC,SAAD;AAAW,YAAA,GAAG,MAAd;AAAA,oCACI,QAAC,KAAD;AAAO,cAAA,GAAG,EAAC,WAAX;AAAuB,cAAA,EAAE,EAAE,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACA,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,IAAI,EAAC,eAAxB;AAAwC,gBAAA,EAAE,EAAC,oBAA3C;AAAgE,gBAAA,WAAW,EAAC,+BAA5E;AAA4G,gBAAA,QAAQ,MAApH;AAAqH,gBAAA,KAAK,EAAEhC,aAA5H;AAA2I,gBAAA,QAAQ,EAAE8B,CAAC,IAAI7B,gBAAgB,CAAC6B,CAAC,CAACC,MAAF,CAASC,KAAV;AAA1K;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvBJ,eA8BI,QAAC,SAAD;AAAW,YAAA,GAAG,MAAd;AAAA,oCACI,QAAC,KAAD;AAAO,cAAA,GAAG,EAAC,eAAX;AAA2B,cAAA,EAAE,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACA,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,IAAI,EAAC,UAAxB;AAAmC,gBAAA,EAAE,EAAC,eAAtC;AAAsD,gBAAA,WAAW,EAAC,aAAlE;AAAgF,gBAAA,QAAQ,MAAxF;AAAyF,gBAAA,KAAK,EAAE9B,QAAhG;AAA0G,gBAAA,QAAQ,EAAE4B,CAAC,IAAI3B,WAAW,CAAC2B,CAAC,CAACC,MAAF,CAASC,KAAV;AAApI;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBA9BJ,eAqCI,QAAC,SAAD;AAAW,YAAA,GAAG,MAAd;AAAA,oCACI,QAAC,KAAD;AAAO,cAAA,GAAG,EAAC,YAAX;AAAwB,cAAA,EAAE,EAAE,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACA,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,OAAZ;AAAoB,gBAAA,IAAI,EAAC,OAAzB;AAAiC,gBAAA,EAAE,EAAC,YAApC;AAAiD,gBAAA,WAAW,EAAC,kCAA7D;AAAiG,gBAAA,QAAQ,MAAzG;AAA0G,gBAAA,KAAK,EAAE5B,KAAjH;AAAwH,gBAAA,QAAQ,EAAE0B,CAAC,IAAIzB,QAAQ,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV;AAA/I;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBArCJ,eA6CI,QAAC,SAAD;AAAW,YAAA,GAAG,MAAd;AAAA,oCACI,QAAC,KAAD;AAAO,cAAA,GAAG,EAAC,eAAX;AAA2B,cAAA,EAAE,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACA,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,UAAZ;AAAuB,gBAAA,IAAI,EAAC,UAA5B;AAAuC,gBAAA,EAAE,EAAC,eAA1C;AAA0D,gBAAA,WAAW,EAAC,wCAAtE;AAA+G,gBAAA,QAAQ,MAAvH;AAAwH,gBAAA,KAAK,EAAE1B,QAA/H;AAAyI,gBAAA,QAAQ,EAAEwB,CAAC,IAAIvB,WAAW,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV;AAAnK;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7CJ,eAoDI;AAAA;AAAA;AAAA;AAAA,kBApDJ,eAqDI;AAAA;AAAA;AAAA;AAAA,kBArDJ,eAwDQ,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxDR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXE;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,UADJ;AAgFH,CA5HD;;GAAMvC,a;;KAAAA,a;AAgIN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Form, FormGroup, Col, Input, Label, Button, Container, CardBody, Card, CardText } from 'reactstrap'\nimport '../../App.css'\nimport '../../index.css'\n\nconst StudentSignup = () => {\n    const [firstname, setFirstName] = useState(\"\")\n    const [lastname, setLastName] = useState(\"\")\n    const [dateofbirth, setDOB] = useState(\"\")\n    const [schoolprogram, setSchoolProgram] = useState(\"\")\n    const [location, setLocation] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    \n    const formSubmit = async event => {\n        event.preventDefault()\n        console.log('ready to hit api/student/new')\n        const response = await fetch('http://localhost:3001/api/student/new', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n                },\n            body: JSON.stringify({firstname, lastname, dateofbirth, schoolprogram, location, email, password})\n        })\n\n\n\n        console.log('finish fetch call')\n        const payload = await response.json()\n        console.log('response code is' + response.status)\n        if (response.status >= 400) {\n            alert(`Oops! Error: ${payload.message} for fields: ${payload.invalid.join(\",\")}`)\n        } else {\n          //  alert(`Congrats! Submission submitted with id: ${payload.id}`)\n            setFirstName(\"\")\n            setLastName(\"\")\n            setDOB(\"\")\n            setSchoolProgram(\"\")\n            setLocation(\"\")\n            setEmail(\"\")\n            setPassword(\"\") \n            console.log(payload)\n            sessionStorage.setItem('student', JSON.stringify(payload))\n            window.location = '/studentprofile'\n        }\n    }\n\n\n    return (\n        <Container>\n              <div className=\"row\">\n              <div className=\"column left\">\n\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n\n            <h2>  Student Sign Up </h2>\n            <hr>\n            </hr>\n      \n            <Form className=\"my-5\" onSubmit={formSubmit}>\n            \n                <FormGroup row>\n                    <Label for=\"nameEntry\" sm={2}>First Name:</Label>\n                    <Col sm={8}>\n                    <Input type=\"text\" name=\"firstname\" id=\"firstnameEntry\" placeholder=\"Enter your first name\" required value={firstname} onChange={e => setFirstName(e.target.value)}/>\n                    </Col>\n                </FormGroup>\n\n                <FormGroup row>\n                    <Label for=\"nameEntry\" sm={2}>Last Name:</Label>\n                    <Col sm={8}>\n                    <Input type=\"text\" name=\"lastname\" id=\"lastnameEntry\" placeholder=\"Enter your last name\" required value={lastname} onChange={e => setLastName(e.target.value)}/>\n                    </Col>\n                </FormGroup>\n\n                <FormGroup row>\n                    <Label for=\"nameEntry\" sm={2}> Date of Birth: </Label>\n                    <Col sm={8}>\n                    <Input type=\"date\" name=\"dateofbirth\" id=\"dobEntry\" placeholder=\"Enter your date of birth\" required value={dateofbirth} onChange={e => setDOB(e.target.value)}/>\n                    </Col>\n                </FormGroup>\n\n                <FormGroup row>\n                    <Label for=\"nameEntry\" sm={2}> School Program: </Label>\n                    <Col sm={8}>\n                    <Input type=\"text\" name=\"schoolprogram\" id=\"schoolprogramEntry\" placeholder=\"What is your faculty program?\" required value={schoolprogram} onChange={e => setSchoolProgram(e.target.value)}/>\n                    </Col>\n                </FormGroup>\n\n                <FormGroup row>\n                    <Label for=\"locationEntry\" sm={2}> Location </Label>\n                    <Col sm={8}>\n                    <Input type=\"text\" name=\"location\" id=\"locationEntry\" placeholder=\"Which city?\" required value={location} onChange={e => setLocation(e.target.value)}/>\n                    </Col>\n                </FormGroup>\n\n                <FormGroup row>\n                    <Label for=\"emailEntry\" sm={2}>Email</Label>\n                    <Col sm={8}>\n                    <Input type=\"email\" name=\"email\" id=\"emailEntry\" placeholder=\"Your email will be your username\"  required value={email} onChange={e => setEmail(e.target.value) }/>\n                    </Col>\n                </FormGroup>\n\n                \n                <FormGroup row>\n                    <Label for=\"passwordEntry\" sm={2}>Password</Label>\n                    <Col sm={8}>\n                    <Input type=\"password\" name=\"password\" id=\"passwordEntry\" placeholder=\"Password must be at least 6 characters\" required value={password} onChange={e => setPassword(e.target.value) }/>\n                    </Col>\n                </FormGroup>\n\n                <br/>\n                <br/>\n\n               \n                    <Button color=\"success\">Register</Button>\n                    \n             \n            </Form>\n            </div>\n            </div>\n        </Container>\n    )\n     \n     \n}\n\n\n\nexport default StudentSignup"]},"metadata":{},"sourceType":"module"}