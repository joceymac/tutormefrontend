{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Jocelyne/Downloads/CapstoneProject-TutorNow-Frontend-main/src/components/pages/studentsignup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, FormGroup, Col, Input, Label, Button, Container, CardBody, Card, CardText } from 'reactstrap';\nimport '../../App.css';\nimport '../../index.css';\n\nconst Contact = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\"); // const [subject, setSubject] = useState(\"\")\n\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const formSubmit = async event => {\n    event.preventDefault();\n    console.log('ready to hit expressApp');\n    const response = await fetch('http://localhost:4000/contact_forms/entries', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        phoneNumber,\n        content\n      })\n    });\n    /*\n              const response = await fetch('http://google.ca', {\n                  method: 'GET',\n                  headers: null,\n                  body: null\n              })\n      */\n\n    console.log('finish fetch call');\n    const payload = await response.json();\n    console.log('response code is' + response.status);\n\n    if (response.status >= 400) {\n      alert(`Oops! Error: ${payload.message} for fields: ${payload.invalid.join(\",\")}`);\n    } else {\n      alert(`Congrats! Submission submitted with id: ${payload.id}`);\n      setName(\"\");\n      setEmail(\"\");\n      setPhoneNumber(\"\");\n      setContent(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column left\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Student Sign Up \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          className: \"my-5\",\n          onSubmit: formSubmit,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            row: true,\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: 10,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"name\",\n                name: \"name\",\n                id: \"nameEntry\",\n                placeholder: \"First Name\",\n                required: true,\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            row: true,\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"emailEntry\",\n              sm: 2,\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 10,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"email\",\n                name: \"email\",\n                id: \"emailEntry\",\n                placeholder: \"Enter email to contact\",\n                required: true,\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            row: true,\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"phonenumberEntry\",\n              sm: 2,\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 10,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"phone\",\n                name: \"phone\",\n                id: \"phoneEntry\",\n                placeholder: \"Enter phone number\",\n                value: phoneNumber,\n                onChange: e => setPhoneNumber(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            row: true,\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"messageEntry\",\n              sm: 2,\n              children: \"Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 10,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"textarea\",\n                name: \"text\",\n                id: \"messageEntry\",\n                placeholder: \"Enter your message\",\n                required: true,\n                value: content,\n                onChange: e => setContent(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            check: true,\n            row: true,\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: {\n                size: 10,\n                offset: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"success\",\n                children: \"Send Over!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 13\n  }, this);\n}; // import { Form, FormGroup, Col, Input, Label, Button, Container, CardBody, Card, CardText } from 'reactstrap'\n// // const Contact = () => {\n//     const [name, setName] = useState(\"\")\n//     const [email, setEmail] = useState(\"\")\n//     const [phoneNumber, setPhoneNumber] = useState(\"\")\n//     const [content, setContent] = useState(\"\")\n//     const formSubmit = async event => {\n//         event.preventDefault()\n//         const response = await fetch('http://localhost:4000/contact_form/entries', {\n//             method: 'POST',\n//             headers: {\n//                 'Accept': 'application/json',\n//                 'Content-Type': 'application/json'\n//               },\n//             body: JSON.stringify({name, email, phoneNumber, content})\n//         })\n//         const payload = await response.json()\n//         if (response.status >= 400) {\n//             alert(`Oops! Error: ${payload.message} for fields: ${payload.invalid.join(\",\")}`)\n//         } else {\n//             alert(`Congrats! Submission submitted with id: ${payload.id}`)\n//         }\n// //     }\n//     return (\n//         <Container>\n//             <Card className=\"text-white bg-secondary my-5 py-4 text-center\">\n//                 <CardBody>\n//                     <CardText className=\"text-white m-0\">Use form to reach me, I'll get back to you within 24 hours!</CardText>\n//                 </CardBody>\n//             </Card>\n//             <Form className=\"my-5\" onSubmit={formSubmit}>\n//                 <FormGroup row>\n//                     <Label for=\"emailEntry\" sm={2}>Email</Label>\n//                     <Col sm={10}>\n//                     <Input type=\"email\" name=\"email\" id=\"emailEntry\" placeholder=\"Enter email to contact\"  required value={email} onChange={e => setEmail(e.target.value) }/>\n//                     </Col>\n//                 </FormGroup>\n//                 <FormGroup row>\n//                     <Label for=\"phoneEntry\" sm={2}>Phone Number</Label>\n//                     <Col sm={10}>\n//                     <Input type=\"phone\" name=\"phone\" id=\"phoneEntry\" placeholder=\"Enter phone number\" value={phoneNumber} onChange={e => setPhoneNumber(e.target.value)}/>\n//                     </Col>\n//                 </FormGroup>\n//                 <FormGroup row>\n//                     <Label for=\"nameEntry\" sm={2}>Full Name</Label>\n//                     <Col sm={10}>\n//                     <Input type=\"name\" name=\"name\" id=\"nameEntry\" placeholder=\"Enter your full name\" required value={name} onChange={e => setName(e.target.value)}/>\n//                     </Col>\n//                 </FormGroup>\n//                 <FormGroup row>\n//                     <Label for=\"messageEntry\" sm={2}>Message</Label>\n//                     <Col sm={10}>\n//                     <Input type=\"textarea\" name=\"text\" id=\"messageEntry\" required value={content} onChange={e => setContent(e.target.value)}/>\n//                     </Col>\n//                 </FormGroup>\n//                 <FormGroup check row>\n//                     <Col sm={{ size: 10, offset: 2 }}>\n//                     <Button color=\"success\">Submit</Button>\n//                     </Col>\n//                 </FormGroup>\n//             </Form>\n//         </Container>\n//       )\n//     }\n\n\n_s(Contact, \"zH/sMAY9ZyVdj3X5WrXluBMSNao=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/Jocelyne/Downloads/CapstoneProject-TutorNow-Frontend-main/src/components/pages/studentsignup.js"],"names":["React","useState","Form","FormGroup","Col","Input","Label","Button","Container","CardBody","Card","CardText","Contact","name","setName","email","setEmail","phoneNumber","setPhoneNumber","content","setContent","formSubmit","event","preventDefault","console","log","response","fetch","method","headers","body","JSON","stringify","payload","json","status","alert","message","invalid","join","id","e","target","value","size","offset"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Form, FormGroup, Col, Input, Label, Button, Container, CardBody, Card, CardText } from 'reactstrap'\nimport '../../App.css'\nimport '../../index.css'\n\nconst Contact = () => {\n        const [name, setName] = useState(\"\")\n        const [email, setEmail] = useState(\"\")\n        // const [subject, setSubject] = useState(\"\")\n        const [phoneNumber, setPhoneNumber] = useState(\"\")\n        const [content, setContent] = useState(\"\")\n    \n        const formSubmit = async event => {\n            event.preventDefault()\n            console.log('ready to hit expressApp')\n            const response = await fetch('http://localhost:4000/contact_forms/entries', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                  },\n                body: JSON.stringify({name, email, phoneNumber, content})\n            })\n  /*\n            const response = await fetch('http://google.ca', {\n                method: 'GET',\n                headers: null,\n                body: null\n            })\n    */\n            console.log('finish fetch call')\n            const payload = await response.json()\n            console.log('response code is' + response.status)\n            if (response.status >= 400) {\n                alert(`Oops! Error: ${payload.message} for fields: ${payload.invalid.join(\",\")}`)\n            } else {\n                alert(`Congrats! Submission submitted with id: ${payload.id}`)\n                setName(\"\")\n                setEmail(\"\")\n                setPhoneNumber(\"\")\n                setContent(\"\")\n            }\n        }\n     return (\n            <Container>\n                {/* <Card className=\"text-white bg-secondary my-5 py-4 text-center\">\n                    <CardBody>\n                        <CardText className=\"text-white m-0\"> */}\n                            <div className=\"row\">\n                            <div className=\"column left\">\n                            <h1> Student Sign Up </h1>\n                            \n                        {/* </CardText>\n                    </CardBody>\n                </Card> */}\n                <Form className=\"my-5\" onSubmit={formSubmit}>\n               \n                    <FormGroup row>\n                        {/* <Label for=\"nameEntry\" sm={2}>First Name</Label> */}\n                        <Col sm={10}>\n                        <Input type=\"name\" name=\"name\" id=\"nameEntry\" placeholder=\"First Name\" required value={name} onChange={e => setName(e.target.value)}/>\n                        </Col>\n                    </FormGroup>\n    \n                    <FormGroup row>\n                        <Label for=\"emailEntry\" sm={2}>Email</Label>\n                        <Col sm={10}>\n                        <Input type=\"email\" name=\"email\" id=\"emailEntry\" placeholder=\"Enter email to contact\"  required value={email} onChange={e => setEmail(e.target.value) }/>\n                        </Col>\n                    </FormGroup>\n\n                    <FormGroup row>\n                        <Label for=\"phonenumberEntry\" sm={2}>Phone Number</Label>\n                        <Col sm={10}>\n                        <Input type=\"phone\" name=\"phone\" id=\"phoneEntry\" placeholder=\"Enter phone number\" value={phoneNumber} onChange={e => setPhoneNumber(e.target.value)}/>\n                     </Col>\n                    </FormGroup>\n\n                    <FormGroup row>\n                        <Label for=\"messageEntry\" sm={2}>Message</Label>\n                        <Col sm={10}>\n                        <Input type=\"textarea\" name=\"text\" id=\"messageEntry\" placeholder =\"Enter your message\" required value={content} onChange={e => setContent(e.target.value)}/>\n                        </Col>\n                    </FormGroup>\n\n                    <FormGroup check row>\n                        <Col sm={{ size: 10, offset: 2 }}>\n                        <Button color=\"success\">Send Over!</Button>\n                        </Col>\n                    </FormGroup>\n                </Form>\n                </div>\n                </div>\n            </Container>\n          )\n  \n             \n         \n     \n}\n\n\n\n\n\n// import { Form, FormGroup, Col, Input, Label, Button, Container, CardBody, Card, CardText } from 'reactstrap'\n\n\n// // const Contact = () => {\n//     const [name, setName] = useState(\"\")\n//     const [email, setEmail] = useState(\"\")\n//     const [phoneNumber, setPhoneNumber] = useState(\"\")\n//     const [content, setContent] = useState(\"\")\n\n//     const formSubmit = async event => {\n//         event.preventDefault()\n//         const response = await fetch('http://localhost:4000/contact_form/entries', {\n//             method: 'POST',\n//             headers: {\n//                 'Accept': 'application/json',\n//                 'Content-Type': 'application/json'\n//               },\n//             body: JSON.stringify({name, email, phoneNumber, content})\n//         })\n//         const payload = await response.json()\n//         if (response.status >= 400) {\n//             alert(`Oops! Error: ${payload.message} for fields: ${payload.invalid.join(\",\")}`)\n//         } else {\n//             alert(`Congrats! Submission submitted with id: ${payload.id}`)\n//         }\n// //     }\n\n//     return (\n//         <Container>\n//             <Card className=\"text-white bg-secondary my-5 py-4 text-center\">\n//                 <CardBody>\n//                     <CardText className=\"text-white m-0\">Use form to reach me, I'll get back to you within 24 hours!</CardText>\n//                 </CardBody>\n//             </Card>\n//             <Form className=\"my-5\" onSubmit={formSubmit}>\n//                 <FormGroup row>\n//                     <Label for=\"emailEntry\" sm={2}>Email</Label>\n//                     <Col sm={10}>\n//                     <Input type=\"email\" name=\"email\" id=\"emailEntry\" placeholder=\"Enter email to contact\"  required value={email} onChange={e => setEmail(e.target.value) }/>\n//                     </Col>\n//                 </FormGroup>\n//                 <FormGroup row>\n//                     <Label for=\"phoneEntry\" sm={2}>Phone Number</Label>\n//                     <Col sm={10}>\n//                     <Input type=\"phone\" name=\"phone\" id=\"phoneEntry\" placeholder=\"Enter phone number\" value={phoneNumber} onChange={e => setPhoneNumber(e.target.value)}/>\n//                     </Col>\n//                 </FormGroup>\n//                 <FormGroup row>\n//                     <Label for=\"nameEntry\" sm={2}>Full Name</Label>\n//                     <Col sm={10}>\n//                     <Input type=\"name\" name=\"name\" id=\"nameEntry\" placeholder=\"Enter your full name\" required value={name} onChange={e => setName(e.target.value)}/>\n//                     </Col>\n//                 </FormGroup>\n\n//                 <FormGroup row>\n//                     <Label for=\"messageEntry\" sm={2}>Message</Label>\n//                     <Col sm={10}>\n//                     <Input type=\"textarea\" name=\"text\" id=\"messageEntry\" required value={content} onChange={e => setContent(e.target.value)}/>\n//                     </Col>\n//                 </FormGroup>\n//                 <FormGroup check row>\n//                     <Col sm={{ size: 10, offset: 2 }}>\n//                     <Button color=\"success\">Submit</Button>\n//                     </Col>\n//                 </FormGroup>\n//             </Form>\n//         </Container>\n//       )\n//     }\n\n    export default Contact"]},"metadata":{},"sourceType":"module"}